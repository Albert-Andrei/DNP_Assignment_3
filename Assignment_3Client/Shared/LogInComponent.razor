@page "/login"
@using Assignment_3Client.Authentication
@* @using Assigment_V2.Authentication *@

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager


<AuthorizeView>
    <NotAuthorized>
        <h2>Login Form</h2>
        
        <h5>To check waht are the user limitations you can log in sa level 2 user: UserName: Jakob, Password: 654321</h5>
        <h5>Or as level 4 user same as an administrator: UserName: Troels, Password: 123456</h5>
        
        <form>
            <div class="container" >
            
                <div class="usern">
                    <label  for="uname"><b>Username</b></label>
                    <input class="logintext" type="text" placeholder="Enter Username" name="uname" required @bind-value="username"></input>
                </div>
                
            <label for="psw"><b>Password</b></label>
            <input class="logintext" type="password" placeholder="Enter Password" name="psw" required @bind-value="password">
            <div style="color:red">@errorMessage</div>
            <button class="loginbtn" @onclick="PerformLogin" type="button">Login</button>
          </div>
        </form>
    </NotAuthorized>
    <Authorized>
        <button @onclick="PerformLogout" class="logout" type="button" > Log out</button>
    </Authorized>
</AuthorizeView>

@code {
    private string username;
    private string password;
    private string errorMessage;

    public async Task PerformLogin() {
        errorMessage = "";
        try {
            await ((CustomAuthenticationStateProvider) AuthenticationStateProvider).ValidateLogin(username, password);
            username = "";
            password = "";
        } catch (Exception e) {
            errorMessage = e.Message;
        }
    }

    public async Task PerformLogout() {
        errorMessage = "";
        username = "";
        password = "";
        try {
            ((CustomAuthenticationStateProvider) AuthenticationStateProvider).Logout();
            NavigationManager.NavigateTo("/");
        } catch (Exception e) { }
    }

}